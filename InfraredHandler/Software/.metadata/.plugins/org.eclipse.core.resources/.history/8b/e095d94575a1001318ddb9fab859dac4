/*
 * Source.h
 *
 *  Created on: 2014-03-01
 *      Author: kigunda
 */

#ifndef SOURCE_H_
#define SOURCE_H_
using namespace std;

template<class Listener>
class Source {
public:
	virtual ~Source();
	void addListener(Listener listener);
	void removeListener(Listener listener);
private:
	list<Listener> listeners;
};


// CONSTRUCTION

Source::Source() {
	// TODO Auto-generated constructor stub

}

Source::~Source() {
	// TODO Auto-generated destructor stub
}

// LISTENERS

template<class Listener>
void Source<Listener>::addListener(Listener listener) {
	listeners.insert(listener);
}

template<class Listener>
void Source<Listener>::removeListener(Listener listener) {
	listeners.remove(listener);
}

#endif /* SOURCE_H_ */
