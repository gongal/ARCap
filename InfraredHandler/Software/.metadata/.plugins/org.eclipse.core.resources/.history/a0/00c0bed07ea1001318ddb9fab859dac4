/*
 * DataSource.h
 *
 *  Created on: 2014-03-01
 *      Author: kigunda
 */

#ifndef DATASOURCE_H_
#define DATASOURCE_H_

using namespace std;

template<class Listener>
class KenanKigundaNameTestDataSource {
public:
	virtual ~KenanKigundaNameTestDataSource();
	void addListener(Listener *listener);
	void removeListener(Listener *listener);
protected:
	list<Listener *> listeners;
};

// CONSTRUCTION

KenanKigundaNameTestDataSource::KenanKigundaNameTestDataSource() {
	// TODO Auto-generated constructor stub

}

KenanKigundaNameTestDataSource::~KenanKigundaNameTestDataSource() {
	// TODO Auto-generated destructor stub
}

// LISTENERS

template<class Listener>
void KenanKigundaNameTestDataSource<Listener>::addListener(Listener *listener) {
	listeners.push_back(listener);
}

template<class Listener>
void KenanKigundaNameTestDataSource<Listener>::removeListener(Listener *listener) {
	listeners.remove(listener);
}

#endif /* DATASOURCE_H_ */
