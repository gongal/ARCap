/*
 * CommandHandler.h
 *
 *  Created on: 2014-03-01
 *      Author: Kenan Kigunda
 */

#ifndef COMMANDHANDLER_H_
#define COMMANDHANDLER_H_

#define COMMAND_INFRARED_RECEIVE_QUEUE_SIZE 4

enum CommandStatus {
	COMMAND_ERR = -1,
	COMMAND_OK = 0
};

class CommandHandler {
public:
	CommandHandler();
	virtual ~CommandHandler();

	/*
	 * Initializes this handler.
	 * @return COMMAND_OK if there are no initialization errors
	 */
	CommandStatus init();

	/*
	 * Updates this handler.
	 * @return COMMAND_OK if there are no command errors
	 */
	CommandStatus update();

	/*
	 * Gets the queue used to accept infrared receive events.
	 * @return the infrared receive queue
	 */
	OS_EVENT *onInfraredReceive();

private:
	int[] infraredReceiveQueueArray;
	OS_EVENT *infraredReceiveQueue;

	void processInfraredReceive(unsigned int level);
};

#endif /* COMMANDHANDLER_H_ */
